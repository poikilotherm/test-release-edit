name: Update Release Notes

# Only run on develop branch and only if the changeset contains a file
# relevant to us.
on:
  push:
    branches:
      - develop
    paths:
      - 'doc/release-notes/*-release-notes.md'

jobs:
  # First get all the changed release notes in this changeset
  get-changed-notes:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-matrix.outputs.versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # As we want to build a changeset that might contain multiple
        # commits since the last push, let's create a larger checkout
        # but avoid 0 = all history
        with:
          fetch-depth: 200
      - name: Calculate Changeset
        id: changeset
        uses: tj-actions/changed-files@v11.5
        with:
          # We create a changeset based on all commits since last push!
          since_last_remote_commit: 'true'
          files: |
            -release-notes.md$
      - name: Create matrix of modified release note versions
        id: set-matrix
        # Remove dirs and suffix then transform numbers to JSON array of strings
        run: >
          echo "::set-output name=versions::$(basename -s -release-notes.md
          -a ${{ steps.changeset.outputs.modified_files }} |
          sed -e 's#^#"#' -e 's#$#"#' |
          paste -s -d, - |
          sed -e 's#^#[#' -e 's#$#]#')"

  mangle-notes:
    # Make the job run after above
    needs: get-changed-notes

    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        version: ${{ fromJson(needs.get-changed-notes.outputs.versions) }}
    steps:
      - name: Echo
        run: |
          echo ${{ matrix.version }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ matrix.version }}
          body_path: doc/release-notes/${{ matrix.version }}-release-notes.md
